%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.59.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2415 2469
%%HiResBoundingBox: 0 0 2415 2469
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2415 2469 re
W
q
[1 0 0 -1 0 2469] cm
q
0 0 2415 2468.8662 re
W*
q
[0.748141 0 0 0.748141 0 -2468.8662] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0 0 3228 6601 re
f
Q
Q
q
5.98513 0 2409.0149 2463.6294 re
W*
q
[13.687638 0 0 13.686876 524.40442 82.408676] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
30.264999 84.224998 m
31.001999 87.572998 33.877998 90.000999 37.104 90.000999 c
63.619999 90.000999 l
66.937996 90.000999 69.848999 87.414001 70.539001 83.850998 c
73.131004 70.477997 75.111 45.674 60.09 27.481998 c
60.543999 27.386999 60.891998 27.003998 60.891998 26.521999 c
60.891998 20.146 l
60.891998 19.593 60.445 19.146 59.891998 19.146 c
56.535999 19.146 l
54.320999 10.746 l
54.205002 10.306 53.807999 10 53.354 10 c
46.761002 10 l
46.307003 10 45.909 10.306 45.794003 10.745 c
43.580002 19.145 l
40.223003 19.145 l
39.670002 19.145 39.223003 19.592001 39.223003 20.145 c
39.223003 26.521 l
39.223003 27.073999 39.670002 27.521 40.223003 27.521 c
40.524002 27.521 l
35.785 32.512001 22.709999 49.931 30.264999 84.224998 c
h
68.575996 83.470001 m
68.066994 86.096001 65.982994 88.000999 63.619995 88.000999 c
37.104 88.000999 l
34.810001 88.000999 32.755001 86.232002 32.217999 83.794998 c
30.426998 75.661995 29.858999 68.508995 30.067999 62.251999 c
39.934998 62.288998 45.055 63.274998 49.999001 64.229996 c
55.039001 65.204994 60.260002 66.209999 70.337997 66.244995 c
70.291 72.856003 69.469002 78.860001 68.575996 83.470001 c
h
47.530998 12 m
52.583 12 l
54.466999 19.146 l
45.647999 19.146 l
47.530998 12 l
h
41.223 21.146 m
58.891998 21.146 l
58.891998 25.521999 l
41.223 25.521999 l
41.223 21.146 l
h
57.5 27.521 m
67.193001 38.455002 70.116997 52.197998 70.324997 64.244003 c
60.446999 64.208 55.322998 63.222004 50.376999 62.266003 c
45.357998 61.295002 40.156998 60.295002 30.160999 60.252003 c
31.553999 37.688004 43.230999 27.672001 43.383999 27.545002 c
43.391998 27.538002 43.395 27.528002 43.403 27.522001 c
57.5 27.522001 l
57.5 27.521 l
h
f
59.380001 59.067001 m
59.560001 59.067001 59.740002 59.049 59.922001 59.013 c
61.486 58.700001 62.600002 57.050999 63.055 54.372002 c
63.456001 52.013 63.339001 49.028 62.724998 45.969002 c
61.557999 40.152 58.486 34.346001 55.105999 35.016003 c
53.542 35.329002 52.427998 36.978004 51.973 39.657001 c
51.571999 42.016003 51.688999 45.000999 52.303001 48.061001 c
53.408001 53.563999 56.214001 59.067001 59.380001 59.067001 c
h
53.944 39.992001 m
54.233002 38.292 54.842999 37.109001 55.498001 36.977001 c
55.545002 36.967003 55.594002 36.963001 55.644001 36.963001 c
57.014 36.963001 59.579002 40.451 60.764 46.362 c
61.331001 49.187 61.445 51.912998 61.083 54.036999 c
60.793999 55.737 60.184002 56.919998 59.528999 57.051998 c
58.193001 57.339996 55.493 53.792999 54.263 47.666 c
53.695999 44.841999 53.583 42.116001 53.944 39.992001 c
h
f
19.948 19.146 m
14.531 19.146 10.125 23.552 10.125 28.969 c
10.125 34.386002 14.531 38.792999 19.948 38.792999 c
25.365 38.792999 29.771 34.385998 29.771 28.968998 c
29.771 23.551998 25.365 19.146 19.948 19.146 c
h
19.948 36.792999 m
15.635 36.792999 12.125 33.283001 12.125 28.969 c
12.125 24.656 15.635 21.146 19.948 21.146 c
24.261 21.146 27.771 24.656 27.771 28.969 c
27.771 33.283001 24.261999 36.792999 19.948 36.792999 c
h
f
19.948 23.551001 m
17.355999 23.551001 15.248 25.659 15.248 28.250999 c
15.248 28.803999 15.695 29.250999 16.248001 29.250999 c
16.801003 29.250999 17.248001 28.803999 17.248001 28.250999 c
17.248001 26.761999 18.459002 25.550999 19.948002 25.550999 c
20.501001 25.550999 20.948002 25.103998 20.948002 24.550999 c
20.948002 23.997999 20.500999 23.551001 19.948 23.551001 c
h
f
82.835999 40.880001 m
82.835999 38.481003 80.883995 36.528 78.484001 36.528 c
76.084007 36.528 74.132004 38.48 74.132004 40.880001 c
74.132004 43.280003 76.084007 45.232002 78.484001 45.232002 c
80.883995 45.232002 82.835999 43.278999 82.835999 40.880001 c
h
76.133003 40.880001 m
76.133003 39.583 77.188004 38.528 78.485001 38.528 c
79.781998 38.528 80.836998 39.583 80.836998 40.880001 c
80.836998 42.177002 79.781998 43.232002 78.485001 43.232002 c
77.188004 43.232002 76.133003 42.176998 76.133003 40.880001 c
h
f
14.856 49.335999 m
14.856 51.734997 16.808001 53.688 19.208 53.688 c
21.608 53.688 23.560001 51.736 23.560001 49.335999 c
23.560001 46.935997 21.608002 44.983997 19.208 44.983997 c
16.807999 44.983997 14.856 46.937 14.856 49.335999 c
h
21.559999 49.335999 m
21.559999 50.632999 20.504999 51.688 19.208 51.688 c
17.911001 51.688 16.856001 50.632999 16.856001 49.335999 c
16.856001 48.038998 17.911001 46.983997 19.208 46.983997 c
20.504999 46.983997 21.559999 48.039001 21.559999 49.335999 c
h
f
78.966003 9.979 m
72.813004 9.979 67.806 14.986 67.806 21.139 c
67.806 27.292 72.813004 32.298 78.966003 32.298 c
85.119003 32.298 90.125 27.292 90.125 21.139 c
90.125 14.986 85.119003 9.979 78.966003 9.979 c
h
78.966003 30.299 m
73.915001 30.299 69.806 26.191 69.806 21.139999 c
69.806 16.088999 73.915001 11.98 78.966003 11.98 c
84.017006 11.98 88.125 16.089001 88.125 21.139999 c
88.125 26.190998 84.016998 30.299 78.966003 30.299 c
h
f
78.674004 15.156 m
75.375 15.156 72.692001 17.841 72.692001 21.139 c
72.692001 21.691999 73.139 22.139 73.692001 22.139 c
74.245003 22.139 74.692001 21.691999 74.692001 21.139 c
74.692001 18.943001 76.478004 17.156 78.674004 17.156 c
79.227005 17.156 79.674004 16.709 79.674004 16.156 c
79.674004 15.603001 79.226997 15.156 78.674004 15.156 c
h
f
Q
q
[24.253857 0 0 24.252506 92.74823 1386.13025] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0.9375 8.964375 m
2.4219 8.964375 l
5.3711 19.403374 l
9.511701 8.964374 l
9.824201 8.964374 l
13.9258 19.403374 l
16.923801 8.964374 l
18.398401 8.964374 l
14.248001 23.446373 l
13.964801 23.446373 l
9.677701 12.489373 l
5.292901 23.446373 l
5.029231 23.446373 l
0.9375 8.964375 l
h
25.927738 12.187375 m
27.574873 12.187375 28.94206 12.783078 30.029301 13.974484 c
31.031904 15.061724 31.533207 16.354042 31.533207 17.851437 c
31.546228 21.549353 31.546228 23.427608 31.533207 23.486202 c
30.078106 23.486202 l
30.078106 21.054602 l
29.316387 22.473873 27.932924 23.268143 25.927715 23.437414 c
24.28709 23.437414 22.947573 22.879147 21.909161 21.762609 c
20.870749 20.646072 20.351549 19.342373 20.351561 17.851509 c
20.351561 16.367134 20.843098 15.078072 21.82617 13.984322 c
22.91341 12.786405 24.280598 12.187447 25.927732 12.187447 c
25.927738 12.187375 l
h
25.927738 13.535375 m
24.788416 13.535375 23.808598 13.958551 22.988285 14.804906 c
22.167973 15.651259 21.757807 16.673393 21.757786 17.871305 c
21.757786 18.646046 21.967747 19.391487 22.387669 20.107634 c
22.80759 20.82378 23.518858 21.429247 24.521469 21.924034 c
27.034491 22.483931 28.8216 21.341352 29.882797 18.4963 c
29.941391 17.584841 29.843735 16.712446 29.589828 15.879112 c
29.407537 15.501508 29.156885 15.143436 28.837875 14.804894 c
28.037094 13.958539 27.067041 13.535362 25.927719 13.535362 c
25.927738 13.535375 l
h
34.687481 8.310375 m
34.999981 8.310375 35.268536 8.421052 35.493145 8.642407 c
35.717754 8.863761 35.830059 9.130688 35.830055 9.443187 c
35.830051 9.755686 35.717751 10.02424 35.493145 10.248847 c
35.268539 10.473455 34.999989 10.585758 34.687485 10.585757 c
34.374981 10.585756 34.108055 10.473454 33.886703 10.248847 c
33.665352 10.024241 33.554676 9.755688 33.554672 9.443187 c
33.554668 9.130686 33.665348 8.863759 33.886703 8.642407 c
34.108059 8.421054 34.374989 8.310377 34.687485 8.310376 c
34.687481 8.310375 l
h
34.00388 12.714374 m
35.380878 12.714374 l
35.380878 23.427376 l
34.00388 23.427376 l
34.00388 12.714375 l
34.00388 12.714374 l
h
42.089817 21.914076 m
41.412735 22.27866 40.748672 22.307957 40.09763 22.001966 c
39.30336 21.396498 38.925755 20.533867 38.964817 19.414076 c
38.964817 14.882776 l
41.503918 14.882776 l
41.503918 13.701177 l
38.955116 13.701177 l
38.955116 8.525377 l
37.568417 8.525377 l
37.568417 19.648376 l
37.555397 20.429626 37.734432 21.145773 38.105526 21.796814 c
38.717506 22.83197 39.550838 23.378845 40.605526 23.437439 c
41.165421 23.45697 41.803444 23.330017 42.519588 23.05658 c
42.408913 22.783142 42.265682 22.402283 42.089901 21.914001 c
42.089817 21.914076 l
h
50.097694 13.632375 m
49.218784 14.550345 l
48.476597 13.834199 47.757195 13.476126 47.060581 13.476126 c
46.611362 13.476126 46.227249 13.62261 45.908237 13.915579 c
45.589226 14.208548 45.429722 14.556848 45.429718 14.960479 c
45.429718 15.299021 45.563183 15.624541 45.830109 15.937041 c
46.090527 16.269072 46.640656 16.649931 47.480499 17.07962 c
48.509144 17.606964 49.205761 18.118032 49.570343 18.612823 c
49.928417 19.114126 50.107452 19.677277 50.107452 20.302277 c
50.107452 21.174673 49.799835 21.915232 49.184601 22.523956 c
48.569366 23.132681 47.7995 23.437044 46.875 23.437046 c
46.256512 23.437046 45.665691 23.30521 45.102539 23.041538 c
44.539387 22.777866 44.07552 22.4084 43.710938 21.933138 c
44.580078 20.946808 l
45.283203 21.741079 46.028645 22.138214 46.816406 22.138214 c
47.363281 22.138214 47.830402 21.960806 48.217773 21.605988 c
48.605145 21.251169 48.798828 20.836136 48.798824 20.360888 c
48.798824 19.963753 48.671871 19.61219 48.417965 19.3062 c
48.164059 19.00021 47.587891 18.61611 46.689465 18.1539 c
45.719414 17.665619 45.061859 17.174082 44.716808 16.679291 c
44.365246 16.197519 44.189465 15.644135 44.189465 15.019135 c
44.189465 14.205333 44.467785 13.529877 45.024426 12.992767 c
45.581066 12.455658 46.279301 12.187104 47.119125 12.187107 c
48.1022 12.187107 49.095036 12.668878 50.097641 13.63242 c
50.097694 13.632375 l
h
56.445293 10.058375 m
55.768211 9.693792 55.104149 9.664496 54.453106 9.970485 c
53.867168 10.282985 53.489563 11.145615 53.320293 12.558375 c
53.320293 13.632575 l
55.859394 13.632575 l
55.859394 14.814175 l
53.310593 14.814175 l
53.310593 23.446976 l
51.923893 23.446976 l
51.923893 12.323976 l
51.943424 11.45158 52.122459 10.735434 52.461002 10.175538 c
52.981834 9.094809 53.81517 8.534913 54.961002 8.495851 c
55.54694 8.359132 56.184959 8.499106 56.875065 8.915772 c
56.764389 9.18921 56.621159 9.570069 56.445377 10.058351 c
56.445293 10.058375 l
h
59.531231 8.310375 m
59.843731 8.310375 60.112286 8.421052 60.336895 8.642407 c
60.561504 8.863761 60.673809 9.130688 60.673805 9.443187 c
60.673801 9.755686 60.561501 10.02424 60.336895 10.248847 c
60.112289 10.473455 59.843739 10.585758 59.531235 10.585757 c
59.218731 10.585756 58.951805 10.473454 58.730453 10.248847 c
58.509102 10.024241 58.398426 9.755688 58.398422 9.443187 c
58.398418 9.130686 58.509098 8.863759 58.730453 8.642407 c
58.951809 8.421054 59.218739 8.310377 59.531235 8.310376 c
59.531231 8.310375 l
h
58.84763 12.714374 m
60.224628 12.714374 l
60.224628 23.427376 l
58.84763 23.427376 l
58.84763 12.714375 l
58.84763 12.714374 l
h
72.089966 19.619175 m
73.242264 20.234406 l
72.87117 20.983103 72.434975 21.585318 71.93367 22.041046 c
71.432365 22.496775 70.869202 22.843443 70.244171 23.081047 c
69.619141 23.318651 68.912773 23.437468 68.125069 23.437496 c
66.38028 23.437496 65.016342 22.866207 64.033272 21.723629 c
63.050198 20.581051 62.558666 19.29035 62.55867 17.851528 c
62.55867 16.49085 62.975338 15.279914 63.80867 14.218716 c
64.863358 12.864549 66.279373 12.187466 68.056717 12.187466 c
69.873123 12.187466 71.328201 12.880825 72.421951 14.267544 c
73.196693 15.244106 73.587318 16.461554 73.593826 17.919888 c
63.974728 17.919888 l
64.000771 19.169888 64.397911 20.193651 65.166138 20.991177 c
65.934364 21.788702 66.88163 22.187469 68.007935 22.187477 c
68.55481 22.187477 69.085411 22.091448 69.599731 21.899391 c
70.114052 21.707335 70.551888 21.455053 70.913231 21.142551 c
71.274574 20.83005 71.66684 20.322248 72.090034 19.619152 c
72.089966 19.619175 l
h
72.089966 16.738276 m
71.907677 16.002598 71.640747 15.415033 71.289185 14.97558 c
70.937622 14.536127 70.472122 14.181293 69.892685 13.91108 c
69.313248 13.640867 68.704514 13.505777 68.066483 13.505811 c
67.018303 13.505811 66.116615 13.844353 65.361404 14.521436 c
64.814529 15.016228 64.401115 15.755159 64.12117 16.738232 c
72.089973 16.738232 l
72.089966 16.738276 l
h
75.947304 8.574375 m
77.334007 8.574375 l
77.334007 23.428375 l
75.947304 23.428375 l
75.947304 8.574375 l
h
90.088341 21.347675 m
90.674278 20.371113 91.025841 19.410826 91.143028 18.466816 c
91.143028 11.689472 91.143028 8.307311 91.143028 8.320332 c
89.775826 8.320332 l
89.775826 14.296932 l
89.196396 13.587297 88.548615 13.058326 87.832466 12.710018 c
87.116318 12.361711 86.331818 12.187557 85.478966 12.187558 c
83.968552 12.187558 82.676231 12.737688 81.602013 13.837949 c
80.527794 14.93821 79.990692 16.272842 79.990715 17.841848 c
79.990715 19.384817 80.531082 20.703176 81.611809 21.796926 c
82.692535 22.890676 83.994637 23.437544 85.518112 23.437527 c
86.390511 23.437527 87.20919 23.269884 87.974167 22.934597 c
88.739143 22.59931 89.443909 22.070343 90.08847 21.347696 c
90.088341 21.347675 l
h
85.634743 22.119175 m
84.860001 22.119175 84.148743 21.928745 83.500954 21.547886 c
82.853165 21.167027 82.337204 20.63806 81.953056 19.960985 c
81.568909 19.283911 81.376854 18.561245 81.376884 17.792986 c
81.376884 17.037777 81.570572 16.313494 81.957939 15.620134 c
82.345306 14.926775 82.866142 14.389675 83.520439 14.008835 c
84.174736 13.627995 84.872971 13.437565 85.615143 13.437545 c
86.370354 13.437545 87.086494 13.627974 87.76358 14.008834 c
88.440666 14.389693 88.961494 14.90726 89.32608 15.561534 c
89.690666 16.215809 89.872955 16.946608 89.872963 17.753933 c
89.872963 18.997423 89.462807 20.035833 88.642494 20.869167 c
87.822182 21.702501 86.81958 22.119167 85.634697 22.119167 c
85.634743 22.119175 l
h
f
Q
q
[18.788477 0 0 18.787432 82.643967 1913.1388] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
1.748 8.886375 m
3.2031 8.886375 l
3.2031 21.972376 l
8.769501 21.972376 l
8.769501 23.368876 l
1.748001 23.368876 l
1.748001 8.886875 l
1.748 8.886375 l
h
15.888675 12.187375 m
17.53581 12.187375 18.902998 12.783078 19.990238 13.974484 c
20.992842 15.061724 21.494144 16.354042 21.494144 17.851437 c
21.507166 21.549353 21.507166 23.427608 21.494144 23.486202 c
20.039043 23.486202 l
20.039043 21.054602 l
19.277325 22.473873 17.893862 23.268143 15.888653 23.437414 c
14.248028 23.437414 12.908509 22.879147 11.870098 21.762609 c
10.831687 20.646072 10.312487 19.342373 10.312498 17.851509 c
10.312498 16.367134 10.804034 15.078072 11.787108 13.984322 c
12.874347 12.786405 14.241534 12.187447 15.88867 12.187447 c
15.888675 12.187375 l
h
15.888675 13.535375 m
14.749351 13.535375 13.769534 13.958551 12.949222 14.804906 c
12.128909 15.651259 11.718742 16.673393 11.718721 17.871305 c
11.718721 18.646046 11.928682 19.391487 12.348604 20.107634 c
12.768526 20.82378 13.479793 21.429247 14.482405 21.924034 c
16.995426 22.483931 18.782536 21.341352 19.843733 18.4963 c
19.902327 17.584841 19.80467 16.712446 19.550764 15.879112 c
19.368473 15.501508 19.117821 15.143436 18.798811 14.804894 c
17.99803 13.958539 17.027977 13.535362 15.888655 13.535362 c
15.888675 13.535375 l
h
23.984419 12.461375 m
25.371119 12.461375 l
25.371119 17.461376 l
25.371119 18.685335 25.436222 19.525179 25.566431 19.980907 c
25.761744 20.63846 26.136093 21.157665 26.689478 21.538525 c
27.242863 21.919384 27.906931 22.109814 28.681679 22.109814 c
29.449907 22.109814 30.10095 21.924267 30.634804 21.553173 c
31.168657 21.182079 31.536491 20.693813 31.738304 20.088373 c
31.881533 19.678217 31.953148 18.802567 31.953148 17.46142 c
31.953148 12.46142 l
33.359447 12.46142 l
33.359447 17.725121 l
33.359447 19.202986 33.185295 20.314638 32.836987 21.060081 c
32.488678 21.805525 31.969479 22.388191 31.279387 22.808081 c
30.589294 23.22797 29.723394 23.437931 28.681686 23.437962 c
27.633509 23.437962 26.761114 23.228001 26.064499 22.808079 c
25.367884 22.388157 24.847052 21.798956 24.501999 21.040478 c
24.156946 20.282 23.984421 19.141033 23.984419 17.617579 c
23.984419 12.461279 l
23.984419 12.461375 l
h
36.396446 19.365274 m
36.376915 18.222675 l
36.357384 17.662779 36.380169 17.187519 36.445274 16.796894 c
36.588505 15.566425 36.901005 14.664733 37.382774 14.091816 c
37.851524 13.590514 38.33004 13.203144 38.818321 12.929707 c
39.625614 12.584655 40.546837 12.421894 41.581993 12.441425 c
42.389286 12.441425 43.136356 12.644875 43.823204 13.051777 c
44.510052 13.458678 44.999954 14.005545 45.292904 14.692377 c
45.585854 15.37921 45.732338 16.455042 45.732353 17.919876 c
45.732353 23.427677 l
44.365154 23.427677 l
44.365154 18.320278 l
44.365154 17.0833 44.313072 16.256475 44.208904 15.839809 c
44.046143 15.130174 43.723877 14.627244 43.242107 14.33102 c
42.760338 14.034797 42.047436 13.886684 41.103409 13.886681 c
40.270077 13.886681 39.527889 14.127566 38.876846 14.609337 c
38.225803 15.091107 37.923073 15.748674 37.968647 16.582037 c
37.844948 17.115891 37.7831 18.089199 37.7831 19.501959 c
37.7831 23.427759 l
36.3964 23.427759 l
36.3964 19.365259 l
36.396446 19.365274 l
h
58.574673 21.347675 m
59.16061 20.371113 59.512173 19.410826 59.62936 18.466816 c
59.62936 11.689472 59.62936 8.307311 59.62936 8.320332 c
58.262161 8.320332 l
58.262161 14.296932 l
57.682735 13.587297 57.034946 13.058326 56.318802 12.710018 c
55.602657 12.361711 54.818157 12.187557 53.965302 12.187558 c
52.454884 12.187558 51.162567 12.737688 50.088348 13.837949 c
49.01413 14.93821 48.477028 16.272842 48.477047 17.841848 c
48.477047 19.384817 49.01741 20.703176 50.098141 21.796926 c
51.178871 22.890676 52.480968 23.437544 54.00444 23.437527 c
54.876835 23.437527 55.695522 23.269884 56.460495 22.934597 c
57.225468 22.59931 57.930237 22.070343 58.574795 21.347696 c
58.574673 21.347675 l
h
54.121071 22.119175 m
53.346333 22.119175 52.635067 21.928745 51.987282 21.547886 c
51.339497 21.167027 50.823528 20.63806 50.439381 19.960985 c
50.055233 19.283911 49.863178 18.561245 49.863213 17.792986 c
49.863213 17.037777 50.056896 16.313494 50.444267 15.620134 c
50.831638 14.926775 51.35247 14.389675 52.006767 14.008835 c
52.661064 13.627995 53.359299 13.437565 54.101467 13.437545 c
54.856674 13.437545 55.572823 13.627974 56.249905 14.008834 c
56.926987 14.389693 57.447823 14.90726 57.812405 15.561534 c
58.176987 16.215809 58.35928 16.946608 58.359283 17.753933 c
58.359283 18.997423 57.949127 20.035833 57.128815 20.869167 c
56.308502 21.702501 55.305901 22.119167 54.121014 22.119167 c
54.121071 22.119175 l
h
61.92387 18.525375 m
61.92387 17.236275 l
62.028038 16.591743 62.177776 16.067656 62.373089 15.664009 c
62.828819 14.544217 63.4408 13.723905 64.20903 13.203072 c
64.977257 12.682239 65.615295 12.421822 66.123131 12.421822 c
66.500732 12.421822 66.904381 12.54552 67.334068 12.792915 c
66.621178 13.945215 l
66.015709 13.723861 65.415123 13.902898 64.81942 14.482325 c
64.223717 15.061751 63.811916 15.693252 63.584019 16.376825 c
63.414749 16.982294 63.330112 18.118362 63.330112 19.785028 c
63.330112 23.408028 l
61.923813 23.408028 l
61.923813 18.525227 l
61.92387 18.525375 l
h
73.564453 12.187375 m
75.211586 12.187375 76.578773 12.783078 77.666016 13.974484 c
78.649086 15.068234 79.140625 16.360552 79.140625 17.851437 c
79.140625 19.342321 78.619789 20.646023 77.578125 21.762537 c
76.536461 22.879051 75.198555 23.437319 73.564423 23.437338 c
71.923798 23.437338 70.584282 22.87907 69.545868 21.762533 c
68.507454 20.645996 67.988258 19.342297 67.988266 17.851433 c
67.988266 16.367058 68.479805 15.077995 69.462875 13.984245 c
70.550117 12.786328 71.917305 12.18737 73.564438 12.18737 c
73.564453 12.187375 l
h
73.564453 13.535375 m
72.425133 13.535375 71.445313 13.958551 70.625 14.804906 c
69.804688 15.651259 69.394524 16.673393 69.394501 17.871305 c
69.394501 18.646046 69.581673 19.370329 69.956024 20.044157 c
70.330376 20.717985 70.836571 21.235552 71.474625 21.596857 c
72.112679 21.958162 72.809273 22.138826 73.564423 22.138847 c
74.332649 22.138847 75.034149 21.958183 75.668915 21.596855 c
76.30368 21.235527 76.80661 20.71796 77.177711 20.044155 c
77.548813 19.37035 77.73436 18.646049 77.734352 17.871256 c
77.734352 16.67334 77.324196 15.651204 76.503883 14.80485 c
75.683571 13.958495 74.703735 13.535329 73.564384 13.53535 c
73.564453 13.535375 l
h
81.660187 19.277374 m
81.660187 17.568375 l
81.777374 16.110041 82.083366 15.042333 82.578156 14.36525 c
82.988312 13.74676 83.525421 13.255223 84.189484 12.89064 c
84.625679 12.610692 85.247429 12.460953 86.054718 12.441421 c
86.575554 12.441421 87.102898 12.539078 87.636749 12.73439 c
88.170601 12.929703 88.584007 13.19012 88.876953 13.51564 c
89.169899 13.841161 89.466125 14.329428 89.765625 14.98044 c
89.928383 14.563773 90.27018 14.075492 90.791016 13.515596 c
91.044922 13.300753 91.373695 13.089164 91.777344 12.880831 c
92.050781 12.70505 92.685547 12.558565 93.681641 12.441378 c
94.423828 12.441378 95.136719 12.626925 95.820313 12.998018 c
96.503906 13.369112 96.984039 13.891579 97.260712 14.565418 c
97.537384 15.239258 97.675728 16.24349 97.675751 17.578117 c
97.675751 23.427717 l
96.269447 23.427717 l
96.269447 17.578117 l
96.269447 16.432283 96.188065 15.644524 96.025307 15.214836 c
95.862549 14.785149 95.582596 14.438482 95.185463 14.174836 c
94.78833 13.91119 94.30983 13.779354 93.749962 13.779326 c
92.695274 13.850941 91.793579 14.362009 91.044884 15.31253 c
90.751915 15.716175 90.530563 16.611359 90.380821 17.998077 c
90.380821 23.427776 l
89.003822 23.427776 l
89.003822 17.939476 l
89.003822 16.650414 88.860596 15.773135 88.574135 15.30764 c
88.287674 14.842145 87.945877 14.471046 87.548737 14.19434 c
87.151596 13.917634 86.656799 13.779287 86.064339 13.7793 c
85.426315 13.7793 84.877815 13.942061 84.418831 14.267581 c
83.959846 14.593102 83.600143 15.079768 83.339729 15.727581 c
83.079315 16.375393 82.975143 17.428459 83.027229 18.886782 c
83.027229 23.427782 l
81.660027 23.427782 l
81.660027 19.277382 l
81.660187 19.277374 l
h
105.625 12.187375 m
107.272133 12.187375 108.63932 12.783078 109.726563 13.974484 c
110.729164 15.061724 111.230469 16.354042 111.230469 17.851437 c
111.243492 21.549353 111.243492 23.427608 111.230469 23.486202 c
109.775368 23.486202 l
109.775368 21.054602 l
109.013649 22.473873 107.630188 23.268143 105.624977 23.437414 c
103.984352 23.437414 102.644836 22.879147 101.606422 21.762609 c
100.568008 20.646072 100.048813 19.342373 100.04882 17.851509 c
100.04882 16.367134 100.540359 15.078072 101.52343 13.984322 c
102.610672 12.786405 103.977859 12.187447 105.624992 12.187447 c
105.625 12.187375 l
h
105.625 13.535375 m
104.48568 13.535375 103.505859 13.958551 102.685547 14.804906 c
101.865234 15.651259 101.45507 16.673393 101.455048 17.871305 c
101.455048 18.646046 101.665009 19.391487 102.08493 20.107634 c
102.504852 20.82378 103.216118 21.429247 104.218727 21.924034 c
106.73175 22.483931 108.51886 21.341352 109.580055 18.4963 c
109.638649 17.584841 109.540993 16.712446 109.287086 15.879112 c
109.104797 15.501508 108.854141 15.143436 108.535133 14.804894 c
107.734352 13.958539 106.764297 13.535362 105.624977 13.535362 c
105.625 13.535375 l
h
117.763649 21.914076 m
117.086563 22.27866 116.422501 22.307957 115.771461 22.001966 c
114.977188 21.396498 114.599586 20.533867 114.638649 19.414076 c
114.638649 14.882776 l
117.17775 14.882776 l
117.17775 13.701177 l
114.628952 13.701177 l
114.628952 8.525377 l
113.242249 8.525377 l
113.242249 19.648376 l
113.229225 20.429626 113.408264 21.145773 113.779358 21.796814 c
114.391335 22.83197 115.22467 23.378845 116.279358 23.437439 c
116.839256 23.45697 117.477272 23.330017 118.19342 23.05658 c
118.082741 22.783142 117.939514 22.402283 117.763733 21.914001 c
117.763649 21.914076 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
